public class AnimalLocator {
    public static String getAnimalNameById(Integer id) {
        /* Récupérer le nom d'un animal par ID */
        Http http = new Http();
        HttpRequest request = new HttpRequest();
        request.setEndpoint('https://th-apex-http-callout.herokuapp.com/animals/'+id);
        request.setMethod('GET');
        HttpResponse response = http.send(request);
        // If the request is successful, parse the JSON response.
        String name = null;
        if (response.getStatusCode() == 200) {
            // Deserialize the JSON string list
            Map<String, Object> result = (Map<String, Object>) JSON.deserializeUntyped(response.getBody());
            // Cast the values in the 'name' key as a list
            Map<String, Object> mapResult = (Map<String, Object>) result.get('animal');
            name = (String)mapResult.get('name');
            System.debug('Received the following animal name:');
            System.debug(name);
        }
        return name;
    }
}

@isTest
global class AnimalLocatorMock implements HttpCalloutMock {
    // Implement this interface method
    global HTTPResponse respond(HTTPRequest request) {
        // Create a fake response
        HttpResponse response = new HttpResponse();
        response.setHeader('Content-Type', 'application/json');
        response.setBody('{"animal":{"id":1,"name":"chicken","eats":"chicken food","says":"cluck cluck"}}');
        response.setStatusCode(200);
        return response; 
    }
}


@isTest
private class AnimalLocatorTest {
	@isTest 
	static void testGetAnimalNameById() {

		// Set mock callout class 
		Test.setMock(HttpCalloutMock.class, new AnimalLocatorMock()); 
		// This causes a fake response to be sent
		// from the class that implements HttpCalloutMock. 
        String resultNameAnimal = AnimalLocator.getAnimalNameById(1);
		
		String expectedName = 'chicken';
        
        // Verify that the animal name is chicken     
        System.assertEquals(expectedName, resultNameAnimal, 'The returned animal name is not a chicken');
    }   
}	




